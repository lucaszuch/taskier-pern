[{"D:\\codecademy\\react\\PERN-app\\client\\src\\index.js":"1","D:\\codecademy\\react\\PERN-app\\client\\src\\App\\App.js":"2","D:\\codecademy\\react\\PERN-app\\client\\src\\Components\\TodoList\\TodoList.js":"3","D:\\codecademy\\react\\PERN-app\\client\\src\\Components\\Form\\Form.js":"4","D:\\codecademy\\react\\PERN-app\\client\\src\\Components\\EditTodo\\EditTodo.js":"5"},{"size":223,"mtime":1610841207001,"results":"6","hashOfConfig":"7"},{"size":747,"mtime":1610977994530,"results":"8","hashOfConfig":"7"},{"size":1633,"mtime":1610979943155,"results":"9","hashOfConfig":"7"},{"size":1277,"mtime":1610978334215,"results":"10","hashOfConfig":"7"},{"size":2031,"mtime":1610978847516,"results":"11","hashOfConfig":"7"},{"filePath":"12","messages":"13","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"14"},"hhqv2h",{"filePath":"15","messages":"16","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"17","messages":"18","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"19","messages":"20","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"21","messages":"22","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"23","usedDeprecatedRules":"14"},"D:\\codecademy\\react\\PERN-app\\client\\src\\index.js",[],["24","25"],"D:\\codecademy\\react\\PERN-app\\client\\src\\App\\App.js",[],"D:\\codecademy\\react\\PERN-app\\client\\src\\Components\\TodoList\\TodoList.js",["26","27"],"D:\\codecademy\\react\\PERN-app\\client\\src\\Components\\Form\\Form.js",[],"D:\\codecademy\\react\\PERN-app\\client\\src\\Components\\EditTodo\\EditTodo.js",["28"],"import React, {Fragment, useState} from 'react';\r\nimport Modal from 'react-bootstrap/Modal';\r\nimport Button from 'react-bootstrap/Button';\r\n\r\n\r\nfunction EditTodo({todo}) {\r\n  //Set states\r\n  const [description, setDescription] = useState(todo.description);\r\n  const [show, setShow] = useState(false);\r\n\r\n  //Modal handlers\r\n  const handleClose = () => setShow(false);\r\n  const handleShow = () => setShow(true);\r\n\r\n  //Handle input changes\r\n  const handleBtnEditChanges = el => {\r\n    setDescription(el.target.value);\r\n  }\r\n\r\n  //Handles description changes\r\n  const updateDescription = async ev => {\r\n    ev.preventDefault();\r\n    try {\r\n      const data = {description};\r\n      const response = await fetch(`http://localhost:5000/todos/${todo.todo_id}`,\r\n      {\r\n        method: \"PUT\",\r\n        headers: {\"Content-Type\":\"application/json\"},\r\n        body: JSON.stringify(data)\r\n      });\r\n\r\n    } catch (err) {\r\n      console.error(err.message);      \r\n    }\r\n  }\r\n  //render()\r\n  return (\r\n    <Fragment>\r\n      <Button variant=\"info\"\r\n              onClick={handleShow}\r\n              id={`#id${todo.todo_is}`}>\r\n        <i class=\"fa fa-pencil\"></i>\r\n      </Button>\r\n\r\n      <Modal show={show}\r\n             onHide={handleClose}\r\n             id={`#id${todo.todo_is}`}>\r\n        <Modal.Header closeButton>\r\n          <Modal.Title>Edit Task</Modal.Title>\r\n        </Modal.Header>\r\n        <Modal.Body>\r\n          <input\r\n            type=\"text\"\r\n            className=\"form-control\"\r\n            value={description}\r\n            onChange={handleBtnEditChanges}/>\r\n        </Modal.Body>\r\n        <Modal.Footer>\r\n          <Button variant=\"secondary\"\r\n                  onClick={handleClose}>\r\n            Close\r\n          </Button>\r\n          <Button variant=\"primary\"\r\n                  onClick={(e) => {\r\n                    updateDescription(e);\r\n                    handleClose();}}>\r\n            Save Changes\r\n          </Button>\r\n        </Modal.Footer>\r\n      </Modal>\r\n    </Fragment>\r\n  )\r\n}\r\n\r\nexport default EditTodo;",{"ruleId":"29","replacedBy":"30"},{"ruleId":"31","replacedBy":"32"},{"ruleId":"33","severity":1,"message":"34","line":11,"column":13,"nodeType":"35","messageId":"36","endLine":11,"endColumn":23},{"ruleId":"37","severity":1,"message":"38","line":36,"column":6,"nodeType":"39","endLine":36,"endColumn":13,"suggestions":"40"},{"ruleId":"33","severity":1,"message":"41","line":25,"column":13,"nodeType":"35","messageId":"36","endLine":25,"endColumn":21},"no-native-reassign",["42"],"no-negated-in-lhs",["43"],"no-unused-vars","'deleteTodo' is assigned a value but never used.","Identifier","unusedVar","react-hooks/exhaustive-deps","React Hook useEffect has a missing dependency: 'getTodos'. Either include it or remove the dependency array.","ArrayExpression",["44"],"'response' is assigned a value but never used.","no-global-assign","no-unsafe-negation",{"desc":"45","fix":"46"},"Update the dependencies array to be: [getTodos, todos]",{"range":"47","text":"48"},[875,882],"[getTodos, todos]"]